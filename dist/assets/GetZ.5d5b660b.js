import{S as B,i as H,s as L,e as t,f as e,g as T,h as a,n as W,p}from"./vendor.47d6f2b6.js";function _(G){let o,f,k,d,i,m,c,Z='<code class="language-pascal"><span class="token keyword">function</span> GetZ<span class="token punctuation">(</span>ObjID <span class="token punctuation">:</span> Cardinal<span class="token punctuation">)</span> <span class="token punctuation">:</span> Byte<span class="token punctuation">;</span></code>',w,r,b,l,j=`<code class="language-pascal"><span class="token keyword">procedure</span> DropRuda<span class="token punctuation">;</span>
<span class="token keyword">var</span> MaxMyWght <span class="token punctuation">:</span> Word<span class="token punctuation">;</span>
<span class="token keyword">begin</span>
  MaxMyWght<span class="token operator">:=</span> MyWight <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">;</span>   
  <span class="token keyword">if</span> MaxMyWght <span class="token operator">&lt;</span> Weight <span class="token keyword">then</span>    
  <span class="token keyword">begin</span>                  
    UseObject<span class="token punctuation">(</span>Backpack<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    wait<span class="token punctuation">(</span><span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          
    <span class="token keyword">if</span> FindTypeEx<span class="token punctuation">(</span><span class="token number">$19B9</span><span class="token punctuation">,</span><span class="token number">$0000</span> <span class="token punctuation">,</span>Backpack<span class="token punctuation">,</span><span class="token keyword">false</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">then</span>
    <span class="token keyword">repeat</span>
      rudapack<span class="token operator">:=</span>FindTypeEx<span class="token punctuation">(</span><span class="token number">$19B9</span><span class="token punctuation">,</span><span class="token number">$0000</span> <span class="token punctuation">,</span>Backpack<span class="token punctuation">,</span><span class="token keyword">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      wait <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      Drop<span class="token punctuation">(</span>rudapack<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> GetX<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">,</span>GetY<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">,</span>GetZ<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      wait<span class="token punctuation">(</span><span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">until</span> Weight <span class="token operator">&lt;</span> MaxMyWght
  <span class="token keyword">end</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`,M,y,x,u,v='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetZ</span><span class="token punctuation">(</span>ObjID<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> ubyte</code>';return{c(){o=t("h1"),o.textContent=`${$}`,f=e(),k=t("p"),k.innerHTML="Returns <em>Z</em> position for object <em>ObjID</em>",d=e(),i=t("p"),i.innerHTML="<strong>Pascal Syntax:</strong>",m=e(),c=t("pre"),w=e(),r=t("p"),r.textContent="Pascal Example:",b=e(),l=t("pre"),M=e(),y=t("p"),y.innerHTML="<strong>Python Syntax:</strong>",x=e(),u=t("pre"),T(c,"class","language-pascal"),T(l,"class","language-pascal"),T(u,"class","language-python")},m(n,s){a(n,o,s),a(n,f,s),a(n,k,s),a(n,d,s),a(n,i,s),a(n,m,s),a(n,c,s),c.innerHTML=Z,a(n,w,s),a(n,r,s),a(n,b,s),a(n,l,s),l.innerHTML=j,a(n,M,s),a(n,y,s),a(n,x,s),a(n,u,s),u.innerHTML=v},p:W,i:W,o:W,d(n){n&&p(o),n&&p(f),n&&p(k),n&&p(d),n&&p(i),n&&p(m),n&&p(c),n&&p(w),n&&p(r),n&&p(b),n&&p(l),n&&p(M),n&&p(y),n&&p(x),n&&p(u)}}}const D={title:"GetZ",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:$,published:I,author:O,summary:P,layout:S}=D;class E extends B{constructor(o){super();H(this,o,null,_,L,{})}}export{E as default,D as metadata};
