import{S as D,i as E,s as W,e as p,f as e,g as w,h as a,n as H,p as t}from"./vendor.47d6f2b6.js";function N(L){let o,b,k,g,r,C,d,G,l,M='<code class="language-pascal"><span class="token keyword">function</span> GetGlobal<span class="token punctuation">(</span>VisibilityArea <span class="token punctuation">:</span> <span class="token keyword">String</span><span class="token punctuation">;</span> VarName <span class="token punctuation">:</span> <span class="token keyword">String</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">String</span><span class="token punctuation">;</span></code>',v,y,T,c,V=`<code class="language-pascal">  <span class="token keyword">If</span> GetGlobal<span class="token punctuation">(</span><span class="token string">'stealth'</span><span class="token punctuation">,</span><span class="token string">'ADogon'</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'1'</span> <span class="token keyword">then</span>
  <span class="token keyword">begin</span>
    SetGlobal<span class="token punctuation">(</span><span class="token string">'stealth'</span><span class="token punctuation">,</span><span class="token string">'ADogon'</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ClientPrint<span class="token punctuation">(</span><span class="token string">'Following cancelled'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span>
  <span class="token keyword">else</span>
  <span class="token keyword">begin</span>
    SetGlobal<span class="token punctuation">(</span><span class="token string">'stealth'</span><span class="token punctuation">,</span><span class="token string">'Adogon'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ClientPrint<span class="token punctuation">(</span><span class="token string">'Following activated'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span><span class="token punctuation">;</span></code>`,S,f,x,u,_=`<code class="language-pascal"><span class="token keyword">procedure</span> WaitOpenContainer<span class="token punctuation">(</span>serial<span class="token punctuation">,</span> modelGump <span class="token punctuation">:</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">begin</span>
	SetEventProc<span class="token punctuation">(</span>evDrawContainer<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	SetGlobal<span class="token punctuation">(</span><span class="token string">'char'</span><span class="token punctuation">,</span> <span class="token string">'Container'</span><span class="token punctuation">,</span> <span class="token string">'Open'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span>

<span class="token keyword">procedure</span> OpenContainer<span class="token punctuation">(</span>serial <span class="token punctuation">:</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span>
	startTime<span class="token punctuation">,</span> waitTime <span class="token punctuation">:</span> integer<span class="token punctuation">;</span>
<span class="token keyword">begin</span>
	SetGlobal<span class="token punctuation">(</span><span class="token string">'char'</span><span class="token punctuation">,</span> <span class="token string">'Container'</span><span class="token punctuation">,</span> <span class="token string">'Closed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	SetEventProc<span class="token punctuation">(</span>evDrawContainer<span class="token punctuation">,</span> <span class="token string">'WaitOpenContainer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	CheckWorldSave<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	waitTime <span class="token operator">:=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
	startTime <span class="token operator">:=</span> GetTickCount<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	UseObject<span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token keyword">while</span> <span class="token punctuation">(</span>GetGlobal<span class="token punctuation">(</span><span class="token string">'char'</span><span class="token punctuation">,</span> <span class="token string">'Container'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'Closed'</span><span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token punctuation">(</span>GetTickCount<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span>startTime <span class="token operator">+</span> waitTime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">do</span>
	<span class="token keyword">begin</span>
  	  Wait<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`,P,m,A,i,O='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetGlobal</span><span class="token punctuation">(</span>GlobalRegion<span class="token punctuation">,</span> VarName<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> string</code>';return{c(){o=p("h1"),o.textContent=`${F}`,b=e(),k=p("p"),k.innerHTML="Retuens value of variable <em>VarName</em> with the <em>VisibilityArea</em>.",g=e(),r=p("p"),r.innerHTML="<em>VisibilityArea</em> can be \u2018char\u2019 or \u2018stealth\u2019. \u2018Stealth\u2019 mean var, visible for all char in current Stealth instance. \u2018Char\u2019 - visible only for sripts of current chararter. <em>VisibilityArea</em> are non case-sensitive.",C=e(),d=p("p"),d.innerHTML="<strong>Pascal Syntax:</strong>",G=e(),l=p("pre"),v=e(),y=p("p"),y.textContent="Pascal Example 2:",T=e(),c=p("pre"),S=e(),f=p("p"),f.textContent="Pascal Example 2:",x=e(),u=p("pre"),P=e(),m=p("p"),m.innerHTML="<strong>Python Syntax:</strong>",A=e(),i=p("pre"),w(l,"class","language-pascal"),w(c,"class","language-pascal"),w(u,"class","language-pascal"),w(i,"class","language-python")},m(n,s){a(n,o,s),a(n,b,s),a(n,k,s),a(n,g,s),a(n,r,s),a(n,C,s),a(n,d,s),a(n,G,s),a(n,l,s),l.innerHTML=M,a(n,v,s),a(n,y,s),a(n,T,s),a(n,c,s),c.innerHTML=V,a(n,S,s),a(n,f,s),a(n,x,s),a(n,u,s),u.innerHTML=_,a(n,P,s),a(n,m,s),a(n,A,s),a(n,i,s),i.innerHTML=O},p:H,i:H,o:H,d(n){n&&t(o),n&&t(b),n&&t(k),n&&t(g),n&&t(r),n&&t(C),n&&t(d),n&&t(G),n&&t(l),n&&t(v),n&&t(y),n&&t(T),n&&t(c),n&&t(S),n&&t(f),n&&t(x),n&&t(u),n&&t(P),n&&t(m),n&&t(A),n&&t(i)}}}const j={title:"GetGlobal",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:F,published:R,author:q,summary:z,layout:U}=j;class Z extends D{constructor(o){super();E(this,o,null,N,W,{})}}export{Z as default,j as metadata};
