import{S as _,i as h,s as B,e as p,f as o,g as P,h as a,n as F,p as t}from"./vendor.47d6f2b6.js";function E(I){let e,S,k,b,r,X,y,Y,d,M,w,T,c,R=`<code class="language-pascal"><span class="token keyword">function</span> GetPathArray3D<span class="token punctuation">(</span>StartX<span class="token punctuation">,</span> StartY <span class="token punctuation">:</span> Word<span class="token punctuation">;</span> StartZ <span class="token punctuation">:</span> Shortint<span class="token punctuation">;</span> FinishX<span class="token punctuation">,</span> FinishY <span class="token punctuation">:</span> Word<span class="token punctuation">;</span> FinishZ <span class="token punctuation">:</span> Shortint<span class="token punctuation">;</span> WorldNum <span class="token punctuation">:</span> Byte<span class="token punctuation">;</span> AccuracyXY<span class="token punctuation">,</span> AccuracyZ <span class="token punctuation">:</span> Integer<span class="token punctuation">;</span> Run <span class="token punctuation">:</span> Boolean<span class="token punctuation">;</span> <span class="token keyword">var</span> PathArray <span class="token punctuation">:</span> TPathArray<span class="token punctuation">)</span> <span class="token punctuation">:</span> Integer<span class="token punctuation">;</span>
</code>`,x,f,v,u,W=`<code class="language-pascal"><span class="token keyword">function</span> easyMoveXY<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">:</span> integer<span class="token punctuation">;</span> Optimized<span class="token punctuation">:</span> boolean<span class="token punctuation">;</span> Accuracy <span class="token punctuation">:</span> Integer<span class="token punctuation">;</span> Running<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span><span class="token punctuation">:</span> boolean<span class="token punctuation">;</span> 
<span class="token keyword">var</span> 
   StepCnt<span class="token punctuation">,</span>i <span class="token punctuation">:</span> Integer<span class="token punctuation">;</span> 
   mPathArr <span class="token punctuation">:</span> TPathArray<span class="token punctuation">;</span>
 
<span class="token keyword">Begin</span> 
<span class="token keyword">Result</span><span class="token operator">:=</span><span class="token keyword">false</span><span class="token punctuation">;</span> 
<span class="token keyword">While</span> <span class="token keyword">true</span> <span class="token keyword">do</span> 
   <span class="token keyword">begin</span> 
   <span class="token string">''</span>AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'pathfinding...'</span><span class="token punctuation">)</span> 
   StepCnt<span class="token operator">:=</span>GetPathArray<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>Optimized<span class="token punctuation">,</span>Accuracy<span class="token punctuation">,</span>mPathArr<span class="token punctuation">)</span><span class="token punctuation">;</span> 
   <span class="token keyword">If</span> StepCnt<span class="token operator">&lt;</span><span class="token number">0</span> <span class="token keyword">then</span> <span class="token keyword">Exit</span><span class="token punctuation">;</span> 
   <span class="token keyword">If</span> StepCnt<span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">then</span> 
      <span class="token keyword">begin</span> 
      <span class="token keyword">Result</span><span class="token operator">:=</span> <span class="token keyword">true</span><span class="token punctuation">;</span> 
      <span class="token keyword">Exit</span><span class="token punctuation">;</span> 
      <span class="token keyword">end</span><span class="token punctuation">;</span> 
   <span class="token keyword">For</span> i<span class="token operator">:=</span><span class="token number">0</span> <span class="token keyword">to</span> StepCnt <span class="token keyword">do</span> 
      <span class="token keyword">begin</span> 
 
      <span class="token keyword">If</span> Not IsWorldCellPassable<span class="token punctuation">(</span>getX<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">,</span>getY<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">,</span>mPathArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>X<span class="token punctuation">,</span>mPathArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Y<span class="token punctuation">,</span>WorldNum<span class="token punctuation">,</span>getZ<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">then</span>  <span class="token keyword">Break</span><span class="token punctuation">;</span> 
      <span class="token keyword">If</span> Not MoveToPoint<span class="token punctuation">(</span>mPathArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>X<span class="token punctuation">,</span>mPathArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Y<span class="token punctuation">,</span>Running<span class="token punctuation">)</span> <span class="token keyword">then</span>  <span class="token keyword">Break</span><span class="token punctuation">;</span> 
      <span class="token keyword">If</span> Dist<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span><span class="token operator">&lt;=</span>Accuracy <span class="token keyword">then</span> 
         <span class="token keyword">begin</span> 
    AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Location reached!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">Result</span><span class="token operator">:=</span><span class="token keyword">true</span><span class="token punctuation">;</span> 
    <span class="token keyword">Exit</span><span class="token punctuation">;</span> 
    <span class="token keyword">end</span><span class="token punctuation">;</span> 
      <span class="token keyword">end</span><span class="token punctuation">;</span> 
    <span class="token keyword">end</span><span class="token punctuation">;</span> 
<span class="token keyword">End</span><span class="token punctuation">;</span></code>`,C,m,H,l,D='<code class="language-pascal">look module mover3d<span class="token punctuation">.</span>pas</code>',L,A,Z,i,N=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetPathArray3D</span><span class="token punctuation">(</span>StartX<span class="token punctuation">,</span> StartY<span class="token punctuation">,</span> StartZ<span class="token punctuation">,</span> FinishX<span class="token punctuation">,</span> FinishY<span class="token punctuation">,</span> FinishZ<span class="token punctuation">,</span> WorldNum<span class="token punctuation">,</span>
                   AccuracyXY<span class="token punctuation">,</span> AccuracyZ<span class="token punctuation">,</span> Run<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span> <span class="token operator">></span> <span class="token builtin">list</span></code>`;return{c(){e=p("h1"),e.textContent=`${z}`,S=o(),k=p("p"),k.innerHTML="<strong>Description:</strong>",b=o(),r=p("p"),r.innerHTML="Calculates path from start position to destination point. Calculated path point will be written to <em>PathArray</em>. Returns path length.",X=o(),y=p("p"),y.innerHTML=`StartX, StartY, StartZ - start point
FinishX, FinishY, FinishZ - Destination point
WorldNum - number of world for route
AccuracyXY, AccuracyZ - approaching accuracy: 0 - exactly to destination point, 1 - in area of 1 tiles from destination point, etc. Limits: AccuracyXY - 0..20; AccuracyZ - 0..255
Run - will character run or walk.
<em>PathArray</em> - founded points array.`,Y=o(),d=p("p"),d.innerHTML='NB: For calculation optimization setting use <a href="Api/MoveHeuristicMult">MoveHeuristicMult</a>',M=o(),w=p("p"),w.innerHTML="<strong>Pascal Syntax:</strong>",T=o(),c=p("pre"),x=o(),f=p("p"),f.textContent="Pascal Example:",v=o(),u=p("pre"),C=o(),m=p("p"),m.textContent="Pascal Example 2:",H=o(),l=p("pre"),L=o(),A=p("p"),A.innerHTML="<strong>Python Syntax:</strong>",Z=o(),i=p("pre"),P(c,"class","language-pascal"),P(u,"class","language-pascal"),P(l,"class","language-pascal"),P(i,"class","language-python")},m(n,s){a(n,e,s),a(n,S,s),a(n,k,s),a(n,b,s),a(n,r,s),a(n,X,s),a(n,y,s),a(n,Y,s),a(n,d,s),a(n,M,s),a(n,w,s),a(n,T,s),a(n,c,s),c.innerHTML=R,a(n,x,s),a(n,f,s),a(n,v,s),a(n,u,s),u.innerHTML=W,a(n,C,s),a(n,m,s),a(n,H,s),a(n,l,s),l.innerHTML=D,a(n,L,s),a(n,A,s),a(n,Z,s),a(n,i,s),i.innerHTML=N},p:F,i:F,o:F,d(n){n&&t(e),n&&t(S),n&&t(k),n&&t(b),n&&t(r),n&&t(X),n&&t(y),n&&t(Y),n&&t(d),n&&t(M),n&&t(w),n&&t(T),n&&t(c),n&&t(x),n&&t(f),n&&t(v),n&&t(u),n&&t(C),n&&t(m),n&&t(H),n&&t(l),n&&t(L),n&&t(A),n&&t(Z),n&&t(i)}}}const G={title:"GetPathArray3D",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:z,published:O,author:j,summary:q,layout:V}=G;class $ extends _{constructor(e){super();h(this,e,null,E,B,{})}}export{$ as default,G as metadata};
