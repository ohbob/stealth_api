import{S as Y,i as S,s as _,e as t,f as o,g as D,h as a,n as X,p}from"./vendor.47d6f2b6.js";function C(v){let e,m,k,w,i,d,c,I='<code class="language-pascal"><span class="token keyword">function</span> GetDirection<span class="token punctuation">(</span>ObjID <span class="token punctuation">:</span> Cardinal<span class="token punctuation">)</span> <span class="token punctuation">:</span> Byte<span class="token punctuation">;</span></code>',b,r,f,u,x=`<code class="language-pascal"><span class="token keyword">Procedure</span> PreslPet<span class="token punctuation">;</span>
<span class="token keyword">Begin</span><span class="token punctuation">;</span>
  DPet<span class="token operator">:=</span>GetDirection<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">If</span> Dpet<span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">then</span> newmoveXY<span class="token punctuation">(</span><span class="token punctuation">(</span>getX<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>gety<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">If</span> Dpet<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">then</span> newmoveXY<span class="token punctuation">(</span>getX<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>gety<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">If</span> Dpet<span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">then</span> newmoveXY<span class="token punctuation">(</span><span class="token punctuation">(</span>getX<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>gety<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">If</span> Dpet<span class="token operator">=</span><span class="token number">3</span> <span class="token keyword">then</span> newmoveXY<span class="token punctuation">(</span><span class="token punctuation">(</span>getX<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>gety<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">If</span> Dpet<span class="token operator">=</span><span class="token number">4</span> <span class="token keyword">then</span> newmoveXY<span class="token punctuation">(</span><span class="token punctuation">(</span>getX<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>gety<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">If</span> Dpet<span class="token operator">=</span><span class="token number">5</span> <span class="token keyword">then</span> newmoveXY<span class="token punctuation">(</span>getX<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>gety<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">If</span> Dpet<span class="token operator">=</span><span class="token number">6</span> <span class="token keyword">then</span> newmoveXY<span class="token punctuation">(</span><span class="token punctuation">(</span>getX<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>gety<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">If</span> Dpet<span class="token operator">=</span><span class="token number">7</span> <span class="token keyword">then</span> newmoveXY<span class="token punctuation">(</span>getX<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>gety<span class="token punctuation">(</span>Pet<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">end</span><span class="token punctuation">;</span> </code>`,P,y,T,l,g='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetDirection</span><span class="token punctuation">(</span>ObjID<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> ubyte</code>';return{c(){e=t("h1"),e.textContent=`${H}`,m=o(),k=t("p"),k.textContent=`Returns character direction(0-7)
Total we have 8 directions in UO: North, NorthEast, East,SouthEast, South, SouthWest, West,NorthWest.
NB: Keep in mind, than 0 can be real direction, but also can be default value for non-conected character`,w=o(),i=t("p"),i.innerHTML="<strong>Pascal Syntax:</strong>",d=o(),c=t("pre"),b=o(),r=t("p"),r.textContent="Pascal Example:",f=o(),u=t("pre"),P=o(),y=t("p"),y.innerHTML="<strong>Python Syntax:</strong>",T=o(),l=t("pre"),D(c,"class","language-pascal"),D(u,"class","language-pascal"),D(l,"class","language-python")},m(n,s){a(n,e,s),a(n,m,s),a(n,k,s),a(n,w,s),a(n,i,s),a(n,d,s),a(n,c,s),c.innerHTML=I,a(n,b,s),a(n,r,s),a(n,f,s),a(n,u,s),u.innerHTML=x,a(n,P,s),a(n,y,s),a(n,T,s),a(n,l,s),l.innerHTML=g},p:X,i:X,o:X,d(n){n&&p(e),n&&p(m),n&&p(k),n&&p(w),n&&p(i),n&&p(d),n&&p(c),n&&p(b),n&&p(r),n&&p(f),n&&p(u),n&&p(P),n&&p(y),n&&p(T),n&&p(l)}}}const G={title:"GetDirection",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:H,published:M,author:E,summary:N,layout:j}=G;class B extends Y{constructor(e){super();S(this,e,null,C,_,{})}}export{B as default,G as metadata};
