import{S as N,i as B,s as C,e as p,f as e,g as T,h as t,n as A,p as a}from"./vendor.47d6f2b6.js";function H(_){let o,d,c,b,k,y,m,g,u,R='<code class="language-pascal"><span class="token keyword">procedure</span> GumpAutoRadiobutton<span class="token punctuation">(</span>RadiobuttonID <span class="token punctuation">:</span> Integer<span class="token punctuation">;</span> Value <span class="token punctuation">:</span> Integer<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',v,r,G,l,I=`<code class="language-pascal"><span class="token keyword">begin</span>
    WaitTargetGround<span class="token punctuation">(</span><span class="token number">$1BF5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    GumpAutoRadiobutton<span class="token punctuation">(</span><span class="token number">1537</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//set hook for gump radiobutton with return_value 1537, to set its status to 1(checked)</span>
    WaitGump<span class="token punctuation">(</span><span class="token string">'7956'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//set hook for gump button with return_value 7956. If found - send gump reply.</span>
    UseObject<span class="token punctuation">(</span>FindType<span class="token punctuation">(</span><span class="token number">$1EB9</span><span class="token punctuation">,</span>backpack<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//use hammer for receiving gump.</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`,w,f,x,i,L='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GumpAutoRadiobutton</span><span class="token punctuation">(</span>RadiobuttonID<span class="token punctuation">,</span> Value<span class="token punctuation">)</span></code>';return{c(){o=p("h1"),o.textContent=`${P}`,d=e(),c=p("p"),c.innerHTML="Set hook for ONE incoming gump and check ALL existing gumps in stealth gump list for containing radiobuttons with <strong>\u201Creturn_value\u201D</strong>  <em>RadiobuttonID</em>, if found - changing its <strong>\u201Cstatus\u201D</strong> to <em>Value</em>. Normally,  <strong>\u201Cstatus\u201D</strong> 0 mean unchecked, any other - checked.",b=e(),k=p("p"),k.innerHTML='NB: This method does NOT send a gump reply to server, it\u2019s just changing checkboxes status values. For reply to gump use <a href="Api/WaitGump">WaitGump</a> or <a href="Api/NumGumpButton">NumGumpButton</a>',y=e(),m=p("p"),m.textContent="Pascal",g=e(),u=p("pre"),v=e(),r=p("p"),r.textContent="Pascal Example:",G=e(),l=p("pre"),w=e(),f=p("p"),f.textContent="Python",x=e(),i=p("pre"),T(u,"class","language-pascal"),T(l,"class","language-pascal"),T(i,"class","language-python")},m(n,s){t(n,o,s),t(n,d,s),t(n,c,s),t(n,b,s),t(n,k,s),t(n,y,s),t(n,m,s),t(n,g,s),t(n,u,s),u.innerHTML=R,t(n,v,s),t(n,r,s),t(n,G,s),t(n,l,s),l.innerHTML=I,t(n,w,s),t(n,f,s),t(n,x,s),t(n,i,s),i.innerHTML=L},p:A,i:A,o:A,d(n){n&&a(o),n&&a(d),n&&a(c),n&&a(b),n&&a(k),n&&a(y),n&&a(m),n&&a(g),n&&a(u),n&&a(v),n&&a(r),n&&a(G),n&&a(l),n&&a(w),n&&a(f),n&&a(x),n&&a(i)}}}const M={title:"GumpAutoRadiobutton",published:"2021-10-05T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:P,published:W,author:j,summary:D,layout:E}=M;class F extends N{constructor(o){super();B(this,o,null,H,C,{})}}export{F as default,M as metadata};
