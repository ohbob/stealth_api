import{S as G,i as L,s as A,e as t,f as o,g as I,h as a,n as S,p}from"./vendor.47d6f2b6.js";function H(R){let e,y,k,m,i,f,c,x=`<code class="language-pascal"><span class="token keyword">function</span> GetToolTipRec<span class="token punctuation">(</span>ObjID <span class="token punctuation">:</span> Cardinal<span class="token punctuation">)</span> <span class="token punctuation">:</span> TClilocRec<span class="token punctuation">;</span>

TClilocRec <span class="token operator">=</span> <span class="token keyword">packed</span> <span class="token keyword">record</span>
   Count <span class="token punctuation">:</span> Cardinal<span class="token punctuation">;</span>
   Items <span class="token punctuation">:</span> <span class="token keyword">array</span> <span class="token keyword">of</span> TClilocItemRec<span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span>
 
TClilocItemRec <span class="token operator">=</span> <span class="token keyword">packed</span> <span class="token keyword">record</span>
   ClilocID <span class="token punctuation">:</span> Cardinal<span class="token punctuation">;</span>
   Params <span class="token punctuation">:</span> <span class="token keyword">array</span> <span class="token keyword">of</span> <span class="token keyword">String</span><span class="token punctuation">;</span>
 <span class="token keyword">end</span><span class="token punctuation">;</span></code>`,w,r,T,l,P=`<code class="language-pascal"><span class="token keyword">Program</span> <span class="token keyword">New</span><span class="token punctuation">;</span>
<span class="token keyword">var</span>
aa <span class="token punctuation">:</span> TClilocRec<span class="token punctuation">;</span>
bb <span class="token punctuation">:</span> TClilocItemRec<span class="token punctuation">;</span>
i<span class="token punctuation">,</span>k <span class="token punctuation">:</span> Integer<span class="token punctuation">;</span>
<span class="token keyword">begin</span>
aa <span class="token operator">:=</span> GetToolTipRec<span class="token punctuation">(</span>BackPack<span class="token punctuation">)</span><span class="token punctuation">;</span>
AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Total lines in Toolptip: '</span> <span class="token operator">+</span> IntToStr<span class="token punctuation">(</span>aa<span class="token punctuation">.</span>Count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> aa<span class="token punctuation">.</span>count <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">then</span>
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span> <span class="token keyword">to</span> aa<span class="token punctuation">.</span>Count <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">do</span>
<span class="token keyword">begin</span>
AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Line '</span> <span class="token operator">+</span> IntToStr<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">': '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bb <span class="token operator">:=</span> aa<span class="token punctuation">.</span>Items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> 
AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Cliloc: $'</span> <span class="token operator">+</span> IntToHex<span class="token punctuation">(</span>bb<span class="token punctuation">.</span>ClilocID<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Cliloc text: '</span> <span class="token operator">+</span> GetClilocByID<span class="token punctuation">(</span>bb<span class="token punctuation">.</span>ClilocID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> k <span class="token operator">:=</span> <span class="token number">0</span> <span class="token keyword">to</span> Length<span class="token punctuation">(</span>bb<span class="token punctuation">.</span>Params<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">do</span>
AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Param-'</span> <span class="token operator">+</span> IntToStr<span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">': "'</span>
<span class="token operator">+</span> bb<span class="token punctuation">.</span>Params<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`,b,d,C,u,D='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetTooltipRec</span><span class="token punctuation">(</span>ObjID<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">list</span></code>';return{c(){e=t("h1"),e.textContent=`${M}`,y=o(),k=t("p"),k.innerHTML=`Retuns tooltip for object wth id <em>ObjID</em> as record with ClilocID and params, ClilocID=0 and params empty if no tooltip.
Synonym for <a href="Api/GetCliloc">GetCliloc</a>`,m=o(),i=t("p"),i.innerHTML="<strong>Pascal Syntax:</strong>",f=o(),c=t("pre"),w=o(),r=t("p"),r.textContent="Pascal Example:",T=o(),l=t("pre"),b=o(),d=t("p"),d.innerHTML="<strong>Python Syntax:</strong>",C=o(),u=t("pre"),I(c,"class","language-pascal"),I(l,"class","language-pascal"),I(u,"class","language-python")},m(n,s){a(n,e,s),a(n,y,s),a(n,k,s),a(n,m,s),a(n,i,s),a(n,f,s),a(n,c,s),c.innerHTML=x,a(n,w,s),a(n,r,s),a(n,T,s),a(n,l,s),l.innerHTML=P,a(n,b,s),a(n,d,s),a(n,C,s),a(n,u,s),u.innerHTML=D},p:S,i:S,o:S,d(n){n&&p(e),n&&p(y),n&&p(k),n&&p(m),n&&p(i),n&&p(f),n&&p(c),n&&p(w),n&&p(r),n&&p(T),n&&p(l),n&&p(b),n&&p(d),n&&p(C),n&&p(u)}}}const v={title:"GetTooltipRec",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:M,published:g,author:j,summary:J,layout:O}=v;class B extends G{constructor(e){super();L(this,e,null,H,A,{})}}export{B as default,v as metadata};
