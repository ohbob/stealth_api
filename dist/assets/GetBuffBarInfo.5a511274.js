import{S as q,i as z,s as N,e as p,f as o,g as r,h as a,n as J,p as t}from"./vendor.47d6f2b6.js";function R(L){let e,w,f,S,d,B,c,M=`<code class="language-pascal">TBuffBarInfo <span class="token operator">=</span> <span class="token keyword">record</span>
  Count <span class="token punctuation">:</span> Byte<span class="token punctuation">;</span>
  Buffs <span class="token punctuation">:</span> <span class="token keyword">array</span> <span class="token keyword">of</span> TBuffIcon<span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span>
 
TBuffIcon <span class="token operator">=</span> <span class="token keyword">record</span>
  Attribute_ID <span class="token punctuation">:</span> Word<span class="token punctuation">;</span>
  TimeStart <span class="token punctuation">:</span> TDateTime<span class="token punctuation">;</span>
  Seconds <span class="token punctuation">:</span> Word<span class="token punctuation">;</span>
  ClilocID1 <span class="token punctuation">:</span> Cardinal<span class="token punctuation">;</span>
  ClilocID2 <span class="token punctuation">:</span> Cardinal<span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> GetBuffBarInfo<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> TBuffBarInfo<span class="token punctuation">;</span></code>`,C,b,x,y,D,u,P=`<code class="language-pascal"><span class="token keyword">program</span> Test<span class="token punctuation">;</span>
<span class="token keyword">var</span>
    buffObj <span class="token punctuation">:</span> TBuffBarInfo<span class="token punctuation">;</span>
    buffIconObj <span class="token punctuation">:</span> TBuffIcon<span class="token punctuation">;</span>
    i <span class="token punctuation">:</span> integer<span class="token punctuation">;</span>
 
<span class="token keyword">begin</span>
    buffObj <span class="token operator">:=</span> GetBuffBarInfo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>buffObj<span class="token punctuation">.</span>Count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">then</span>
    <span class="token keyword">begin</span>
        AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'No active buffs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">Exit</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span><span class="token punctuation">;</span>
 
    AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Tota;l '</span> <span class="token operator">+</span> IntToStr<span class="token punctuation">(</span>buffObj<span class="token punctuation">.</span>Count<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' active buffs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span> <span class="token keyword">to</span> buffObj<span class="token punctuation">.</span>Count <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">do</span>
    <span class="token keyword">begin</span>
        buffIconObj <span class="token operator">:=</span> buffObj<span class="token punctuation">.</span>Buffs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
 
        AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Buff #'</span> <span class="token operator">+</span> IntToStr<span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Attribute_ID: '</span> <span class="token operator">+</span> IntToHex<span class="token punctuation">(</span>buffIconObj<span class="token punctuation">.</span>Attribute_ID<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'TimeStart: '</span> <span class="token operator">+</span> DateTimeToStr<span class="token punctuation">(</span>buffIconObj<span class="token punctuation">.</span>TimeStart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Seconds: '</span> <span class="token operator">+</span> IntToStr<span class="token punctuation">(</span>buffIconObj<span class="token punctuation">.</span>Seconds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'ClilocID1: '</span> <span class="token operator">+</span> IntToHex<span class="token punctuation">(</span>buffIconObj<span class="token punctuation">.</span>ClilocID1<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'ClilocID2: '</span> <span class="token operator">+</span> IntToHex<span class="token punctuation">(</span>buffIconObj<span class="token punctuation">.</span>ClilocID2<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        AddToSystemJournal<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">.</span></code>`,A,I,j,l,G='<code class="language-pascal"></code>',O,m,_,k,E=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetBuffBarInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">dict</span>
<span class="token builtin">dict</span> keys <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'Attribute_ID'</span><span class="token punctuation">,</span> <span class="token string">'TimeStart'</span><span class="token punctuation">,</span> <span class="token string">'Seconds'</span><span class="token punctuation">,</span> <span class="token string">'ClilocID1'</span><span class="token punctuation">,</span> <span class="token string">'ClilocID2'</span><span class="token punctuation">)</span></code>`,v,T,H,i,W='<code class="language-pascal"></code>';return{c(){e=p("h1"),e.textContent=`${Z}`,w=o(),f=p("p"),f.textContent="Returns list of character\u2019s active (de)buffs",S=o(),d=p("p"),d.innerHTML="<strong>Pascal Syntax:</strong>",B=o(),c=p("pre"),C=o(),b=p("p"),b.textContent=`where:
Attribute_ID : (de)buff ID, Seconds - time of (de)buff. ClilocID1, ClilocID2 - used in Icon hint, can contain some additional info.`,x=o(),y=p("p"),y.textContent="Pascal Example:",D=o(),u=p("pre"),A=o(),I=p("p"),I.textContent="Pascal Example 2:",j=o(),l=p("pre"),O=o(),m=p("p"),m.innerHTML="<strong>Python Syntax:</strong>",_=o(),k=p("pre"),v=o(),T=p("p"),T.textContent="Pyton Example:",H=o(),i=p("pre"),r(c,"class","language-pascal"),r(u,"class","language-pascal"),r(l,"class","language-pascal"),r(k,"class","language-python"),r(i,"class","language-pascal")},m(n,s){a(n,e,s),a(n,w,s),a(n,f,s),a(n,S,s),a(n,d,s),a(n,B,s),a(n,c,s),c.innerHTML=M,a(n,C,s),a(n,b,s),a(n,x,s),a(n,y,s),a(n,D,s),a(n,u,s),u.innerHTML=P,a(n,A,s),a(n,I,s),a(n,j,s),a(n,l,s),l.innerHTML=G,a(n,O,s),a(n,m,s),a(n,_,s),a(n,k,s),k.innerHTML=E,a(n,v,s),a(n,T,s),a(n,H,s),a(n,i,s),i.innerHTML=W},p:J,i:J,o:J,d(n){n&&t(e),n&&t(w),n&&t(f),n&&t(S),n&&t(d),n&&t(B),n&&t(c),n&&t(C),n&&t(b),n&&t(x),n&&t(y),n&&t(D),n&&t(u),n&&t(A),n&&t(I),n&&t(j),n&&t(l),n&&t(O),n&&t(m),n&&t(_),n&&t(k),n&&t(v),n&&t(T),n&&t(H),n&&t(i)}}}const V={title:"GetBuffBarInfo",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:Z,published:F,author:K,summary:Q,layout:U}=V;class X extends q{constructor(e){super();z(this,e,null,R,N,{})}}export{X as default,V as metadata};
