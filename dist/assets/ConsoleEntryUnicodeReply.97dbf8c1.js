import{S as L,i as P,s as S,e,f as o,g as R,h as t,n as _,p as a}from"./vendor.47d6f2b6.js";function q(M){let p,m,i,C,k,w,r,x,f,b,l,B='<code class="language-pascal"><span class="token keyword">procedure</span> ConsoleEntryUnicodeReply<span class="token punctuation">(</span>Text <span class="token punctuation">:</span> <span class="token keyword">String</span><span class="token punctuation">)</span></code>',v,y,E,u,H='<code class="language-python"><span class="token keyword">def</span> <span class="token function">ConsoleEntryUnicodeReply</span><span class="token punctuation">(</span>Text<span class="token punctuation">)</span></code>',T,d,U,c,I=`<code class="language-pascal"><span class="token keyword">procedure</span> renamebook<span class="token punctuation">(</span>oldBook<span class="token punctuation">:</span>integer<span class="token punctuation">;</span>str<span class="token punctuation">:</span><span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">begin</span>
  RequestContextMenu<span class="token punctuation">(</span>oldBook<span class="token punctuation">)</span><span class="token punctuation">;</span>
  SetContextMenuHook<span class="token punctuation">(</span>oldBook<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  wait<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ConsoleEntryUnicodeReply<span class="token punctuation">(</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  wait<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  bookstr<span class="token operator">:=</span>GetCliLoc<span class="token punctuation">(</span>oldBook<span class="token punctuation">)</span><span class="token punctuation">;</span>
  wait<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`;return{c(){p=e("h1"),p.textContent=`${z}`,m=o(),i=e("p"),i.textContent="This method is used for console output in UO Client. For example - rune renaming.",C=o(),k=e("p"),k.textContent="If you not sure, if ConsoleEntry or ConsoleEntryUnicode coming from server - check Journal, message about console entry will be printed there.",w=o(),r=e("p"),r.textContent="If Console Entry already received from server - this method will immediately send answer to server. If not received yet - the hook installing, and once Console Etry will come - it will be processed by this hook.",x=o(),f=e("p"),f.textContent="Pascal",b=o(),l=e("pre"),v=o(),y=e("p"),y.textContent="Python",E=o(),u=e("pre"),T=o(),d=e("p"),d.textContent="Example Pascal",U=o(),c=e("pre"),R(l,"class","language-pascal"),R(u,"class","language-python"),R(c,"class","language-pascal")},m(n,s){t(n,p,s),t(n,m,s),t(n,i,s),t(n,C,s),t(n,k,s),t(n,w,s),t(n,r,s),t(n,x,s),t(n,f,s),t(n,b,s),t(n,l,s),l.innerHTML=B,t(n,v,s),t(n,y,s),t(n,E,s),t(n,u,s),u.innerHTML=H,t(n,T,s),t(n,d,s),t(n,U,s),t(n,c,s),c.innerHTML=I},p:_,i:_,o:_,d(n){n&&a(p),n&&a(m),n&&a(i),n&&a(C),n&&a(k),n&&a(w),n&&a(r),n&&a(x),n&&a(f),n&&a(b),n&&a(l),n&&a(v),n&&a(y),n&&a(E),n&&a(u),n&&a(T),n&&a(d),n&&a(U),n&&a(c)}}}const j={title:"ConsoleEntryUnicodeReply",published:"2020-06-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:z,published:F,author:G,summary:J,layout:O}=j;class V extends L{constructor(p){super();P(this,p,null,q,S,{})}}export{V as default,j as metadata};
