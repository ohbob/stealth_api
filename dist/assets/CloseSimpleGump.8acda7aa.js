import{S as T,i as B,s as H,e as t,f as a,g as I,h as e,n as b,p}from"./vendor.47d6f2b6.js";function M(S){let l,r,m,C,c,G,o,_=`<code class="language-pascal"><span class="token keyword">procedure</span> CloseSimpleGump<span class="token punctuation">(</span>GumpIndex <span class="token punctuation">:</span> Word<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code>`,d,f,y,u,v='<code class="language-python"><span class="token keyword">def</span> <span class="token function">CloseSimpleGump</span><span class="token punctuation">(</span>GumpIndex<span class="token punctuation">)</span></code>',x,k,w,i,L=`<code class="language-python">If IsGump then
  <span class="token keyword">if</span> IsGumpCanBeClosed<span class="token punctuation">(</span>GetGumpsCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> then
    CloseSimpleGump<span class="token punctuation">(</span>GetGumpsCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){l=t("h1"),l.textContent=`${A}`,r=a(),m=t("p"),m.innerHTML=`Close Gump with index in Stealth Gumps List <strong><em>GumpIndex</em></strong>
NB: Only Gump with missing propert \u201Cnoclose\u201D can be closed. Use method <a href="Api/IsGumpCanBeClosed">IsGumpCanBeClosed</a> to check, if gump can be close this way.`,C=a(),c=t("p"),c.textContent="Pascal",G=a(),o=t("pre"),d=a(),f=t("p"),f.textContent="Python",y=a(),u=t("pre"),x=a(),k=t("p"),k.textContent="Example Python",w=a(),i=t("pre"),I(o,"class","language-pascal"),I(u,"class","language-python"),I(i,"class","language-python")},m(s,n){e(s,l,n),e(s,r,n),e(s,m,n),e(s,C,n),e(s,c,n),e(s,G,n),e(s,o,n),o.innerHTML=_,e(s,d,n),e(s,f,n),e(s,y,n),e(s,u,n),u.innerHTML=v,e(s,x,n),e(s,k,n),e(s,w,n),e(s,i,n),i.innerHTML=L},p:b,i:b,o:b,d(s){s&&p(l),s&&p(r),s&&p(m),s&&p(C),s&&p(c),s&&p(G),s&&p(o),s&&p(d),s&&p(f),s&&p(y),s&&p(u),s&&p(x),s&&p(k),s&&p(w),s&&p(i)}}}const P={title:"CloseSimpleGump",published:"2020-06-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:A,published:q,author:z,summary:E,layout:N}=P;class O extends T{constructor(l){super();B(this,l,null,M,H,{})}}export{O as default,P as metadata};
