import{S as nn,i as sn,s as tn,e as a,f as p,g as H,h as t,n as U,p as e}from"./vendor.47d6f2b6.js";function en(Z){let o,M,f,_,k,S,r,v,d,E,m,G,F,B,y,O,b,P,T,D,C,Q,x,$,w,q,j,V,l,K='<code class="language-pascal"><span class="token keyword">function</span> FindTypeEx<span class="token punctuation">(</span>ObjType<span class="token punctuation">:</span>Word<span class="token punctuation">;</span> Color<span class="token punctuation">:</span>Word<span class="token punctuation">;</span> Container<span class="token punctuation">:</span>Cardinal<span class="token punctuation">;</span> InSub<span class="token punctuation">:</span>Boolean<span class="token punctuation">)</span><span class="token punctuation">:</span>Cardinal</code>',z,A,N,i,X='<code class="language-python"><span class="token keyword">def</span> <span class="token function">FindTypeEx</span><span class="token punctuation">(</span>ObjType<span class="token punctuation">,</span> Color<span class="token punctuation">,</span> Container<span class="token punctuation">,</span> InSub<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">></span> uint</code>',R,I,W,u,h=`<code class="language-pascal"><span class="token keyword">if</span> FindTypeEx<span class="token punctuation">(</span>bottle_type<span class="token punctuation">,</span>bottle_color<span class="token punctuation">,</span>Ground<span class="token punctuation">,</span><span class="token keyword">false</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">then</span>
<span class="token keyword">begin</span>
  UseObject<span class="token punctuation">(</span>FindItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`,Y,L,J,c,g=`<code class="language-python"> FindType<span class="token punctuation">(</span>runes<span class="token punctuation">,</span> runes_color<span class="token punctuation">,</span> Backpack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> true<span class="token punctuation">)</span>
  AddAddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Runes found: &#123;0&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>FindCount<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`;return{c(){o=a("h1"),o.textContent=`${pn}`,M=p(),f=a("p"),f.innerHTML="Search for the objects with specified type <strong><em>ObjType</em></strong> and color <strong><em>Color</em></strong> in specified container <strong><em>Container</em></strong>.",_=p(),k=a("p"),k.innerHTML="<strong><em>InSub</em></strong> select search mode for subcontainers - true or false.",S=p(),r=a("p"),r.textContent="Returns the last object found using the function.",v=p(),d=a("p"),d.textContent="If no objects found, or char disconnected - returns 0.",E=p(),m=a("p"),m.textContent="Search result:",G=p(),F=a("ul"),F.innerHTML=`<li>A list of found objects can be obtained ny methods <a href="Api/GetFindedList">GetFindedList</a> or <a href="Api/GetFoundItems">GetFoundItems</a></li> 
<li>The last object was found also stored in <a href="Api/FindItem">FindItem</a></li> 
<li><a href="Api/FindCount">FindCount</a>   returns amount of found items (without stacks content)</li> 
<li><a href="Api/FindQuantity">FindQuantity</a>   returns quantity of last finded object (object field).</li> 
<li><a href="Api/FindFullQuantity">FindFullQuantity</a> returns amount of found items (including stacks content)</li>`,B=p(),y=a("p"),y.textContent="Search distance modifiers:",O=p(),b=a("ul"),b.innerHTML=`<li><a href="Api/FindDistance">FindDistance</a> - specifies the search range by horizontal</li> 
<li><a href="Api/FindVertical">FindVertical</a> - specifies the search range by vertical</li>`,P=p(),T=a("p"),T.innerHTML="The parameter <strong><em>Container</em></strong> can be:",D=p(),C=a("ul"),C.innerHTML=`<li><a href="Api/Backpack">Backpack</a></li> 
<li><a href="Api/Ground">Ground</a></li> 
<li>$FFFFFFFF(= -1)</li> 
<li>ID of the required container (if object with ID not exists, searching in Backpack)</li>`,Q=p(),x=a("p"),x.innerHTML="If <strong><em>ObjType</em></strong> = -1($FFFF) - will search ANY objects.",$=p(),w=a("p"),w.innerHTML="If <strong><em>Color</em></strong> = -1($FFFF) - will search objects with ANY color.",q=p(),j=a("p"),j.textContent="Pascal",V=p(),l=a("pre"),z=p(),A=a("p"),A.textContent="Python",N=p(),i=a("pre"),R=p(),I=a("p"),I.textContent="Example Pascal",W=p(),u=a("pre"),Y=p(),L=a("p"),L.textContent="Example Python",J=p(),c=a("pre"),H(l,"class","language-pascal"),H(i,"class","language-python"),H(u,"class","language-pascal"),H(c,"class","language-python")},m(n,s){t(n,o,s),t(n,M,s),t(n,f,s),t(n,_,s),t(n,k,s),t(n,S,s),t(n,r,s),t(n,v,s),t(n,d,s),t(n,E,s),t(n,m,s),t(n,G,s),t(n,F,s),t(n,B,s),t(n,y,s),t(n,O,s),t(n,b,s),t(n,P,s),t(n,T,s),t(n,D,s),t(n,C,s),t(n,Q,s),t(n,x,s),t(n,$,s),t(n,w,s),t(n,q,s),t(n,j,s),t(n,V,s),t(n,l,s),l.innerHTML=K,t(n,z,s),t(n,A,s),t(n,N,s),t(n,i,s),i.innerHTML=X,t(n,R,s),t(n,I,s),t(n,W,s),t(n,u,s),u.innerHTML=h,t(n,Y,s),t(n,L,s),t(n,J,s),t(n,c,s),c.innerHTML=g},p:U,i:U,o:U,d(n){n&&e(o),n&&e(M),n&&e(f),n&&e(_),n&&e(k),n&&e(S),n&&e(r),n&&e(v),n&&e(d),n&&e(E),n&&e(m),n&&e(G),n&&e(F),n&&e(B),n&&e(y),n&&e(O),n&&e(b),n&&e(P),n&&e(T),n&&e(D),n&&e(C),n&&e(Q),n&&e(x),n&&e($),n&&e(w),n&&e(q),n&&e(j),n&&e(V),n&&e(l),n&&e(z),n&&e(A),n&&e(N),n&&e(i),n&&e(R),n&&e(I),n&&e(W),n&&e(u),n&&e(Y),n&&e(L),n&&e(J),n&&e(c)}}}const an={title:"FindTypeEx",published:"2020-06-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:pn,published:ln,author:un,summary:cn,layout:fn}=an;class kn extends nn{constructor(o){super();sn(this,o,null,en,tn,{})}}export{kn as default,an as metadata};
