import{S as w,i as C,s as v,e as a,f as o,g as m,h as t,n as k,p as n}from"./vendor.47d6f2b6.js";function B(b){let l,c,u,P,f,y,r,_,p,x='<code class="language-pascal"><span class="token keyword">function</span> HTTP_Body <span class="token punctuation">:</span> <span class="token keyword">String</span><span class="token punctuation">;</span></code>',H,T,d,i,A='<code class="language-python"><span class="token keyword">def</span> <span class="token function">HTTP_Body</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> string</code>';return{c(){l=a("h1"),l.textContent=`${L}`,c=o(),u=a("p"),u.innerHTML='After calling <a href="Api/HTTP_Get">HTTP_Get</a> or <a href="Api/HTTP_Post">HTTP_Post</a> you can obrain returned body by using this method.',P=o(),f=a("p"),f.innerHTML='NB: If <a href="Api/HTTP_Get">HTTP_Get</a> or <a href="Api/HTTP_Post">HTTP_Post</a> not called before, or calling failed - returns \u201D;',y=o(),r=a("p"),r.textContent="Pascal",_=o(),p=a("pre"),H=o(),T=a("p"),T.textContent="Python",d=o(),i=a("pre"),m(p,"class","language-pascal"),m(i,"class","language-python")},m(s,e){t(s,l,e),t(s,c,e),t(s,u,e),t(s,P,e),t(s,f,e),t(s,y,e),t(s,r,e),t(s,_,e),t(s,p,e),p.innerHTML=x,t(s,H,e),t(s,T,e),t(s,d,e),t(s,i,e),i.innerHTML=A},p:k,i:k,o:k,d(s){s&&n(l),s&&n(c),s&&n(u),s&&n(P),s&&n(f),s&&n(y),s&&n(r),s&&n(_),s&&n(p),s&&n(H),s&&n(T),s&&n(d),s&&n(i)}}}const G={title:"Count",published:"2020-06-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:L,published:S,author:I,summary:j,layout:q}=G;class z extends w{constructor(l){super();C(this,l,null,B,v,{})}}export{z as default,G as metadata};
