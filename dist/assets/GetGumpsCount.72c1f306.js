import{S as B,i as R,s as j,e as t,f as e,g as L,h as a,n as M,p}from"./vendor.47d6f2b6.js";function q(_){let l,y,c,C,m,d,f,x,r,w,o,I='<code class="language-pascal"><span class="token keyword">function</span> GetGumpsCount<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> Cardinal<span class="token punctuation">;</span></code>',b,k,v,u,S=`<code class="language-pascal"><span class="token keyword">If</span> IsGump <span class="token keyword">then</span>
  <span class="token keyword">if</span> IsGumpCanBeClosed<span class="token punctuation">(</span>GetGumpsCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">then</span>
    CloseSimpleGump<span class="token punctuation">(</span>GetGumpsCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,T,G,H,i,P='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetGumpsCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span></code>';return{c(){l=t("h1"),l.textContent=`${A}`,y=e(),c=t("p"),c.textContent="Returns amount of active gumps for current character.",C=e(),m=t("p"),m.textContent="Returns 0 if character disconnected, or no gumps.",d=e(),f=t("p"),f.innerHTML="NB: Usually used in scripts like \u201CGetGumpsCount - 1\u201D as param for script methods, which have param <em>GumpIndex</em>, means last gump in gumps list.",x=e(),r=t("p"),r.innerHTML="<strong>Pascal Syntax:</strong>",w=e(),o=t("pre"),b=e(),k=t("p"),k.textContent="Pascal Example:",v=e(),u=t("pre"),T=e(),G=t("p"),G.innerHTML="<strong>Python Syntax:</strong>",H=e(),i=t("pre"),L(o,"class","language-pascal"),L(u,"class","language-pascal"),L(i,"class","language-python")},m(s,n){a(s,l,n),a(s,y,n),a(s,c,n),a(s,C,n),a(s,m,n),a(s,d,n),a(s,f,n),a(s,x,n),a(s,r,n),a(s,w,n),a(s,o,n),o.innerHTML=I,a(s,b,n),a(s,k,n),a(s,v,n),a(s,u,n),u.innerHTML=S,a(s,T,n),a(s,G,n),a(s,H,n),a(s,i,n),i.innerHTML=P},p:M,i:M,o:M,d(s){s&&p(l),s&&p(y),s&&p(c),s&&p(C),s&&p(m),s&&p(d),s&&p(f),s&&p(x),s&&p(r),s&&p(w),s&&p(o),s&&p(b),s&&p(k),s&&p(v),s&&p(u),s&&p(T),s&&p(G),s&&p(H),s&&p(i)}}}const z={title:"GetGumpsCount",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:A,published:N,author:U,summary:V,layout:Z}=z;class $ extends B{constructor(l){super();R(this,l,null,q,j,{})}}export{$ as default,z as metadata};
