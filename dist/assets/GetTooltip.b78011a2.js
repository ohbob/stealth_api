import{S as _,i as j,s as v,e as p,f as e,g as G,h as a,n as M,p as t}from"./vendor.47d6f2b6.js";function I(S){let o,m,c,y,k,d,l,C='<code class="language-pascal"><span class="token keyword">function</span> GetTooltip<span class="token punctuation">(</span>ObjID <span class="token punctuation">:</span> Cardinal<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">String</span><span class="token punctuation">;</span></code>',w,r,T,i,H=`<code class="language-pascal"><span class="token keyword">if</span> BMSearch<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>GetTooltip<span class="token punctuation">(</span>finditem<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'64'</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span> <span class="token keyword">then</span> 
  ignore<span class="token punctuation">(</span>finditem<span class="token punctuation">)</span> 
<span class="token keyword">else</span> 
<span class="token keyword">begin</span>
  <span class="token comment">//Work with item here</span>
<span class="token keyword">end</span><span class="token punctuation">;</span>
</code>`,b,f,x,u,L='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetTooltip</span><span class="token punctuation">(</span>ObjID<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> string</code>';return{c(){o=p("h1"),o.textContent=`${D}`,m=e(),c=p("p"),c.innerHTML=`Retuns tooltip for object wth id <em>ObjID</em>, empty line if no tooltip.
Synonym for <a href="Api/GetCliloc">GetCliloc</a>`,y=e(),k=p("p"),k.innerHTML="<strong>Pascal Syntax:</strong>",d=e(),l=p("pre"),w=e(),r=p("p"),r.textContent="Pascal Example:",T=e(),i=p("pre"),b=e(),f=p("p"),f.innerHTML="<strong>Python Syntax:</strong>",x=e(),u=p("pre"),G(l,"class","language-pascal"),G(i,"class","language-pascal"),G(u,"class","language-python")},m(s,n){a(s,o,n),a(s,m,n),a(s,c,n),a(s,y,n),a(s,k,n),a(s,d,n),a(s,l,n),l.innerHTML=C,a(s,w,n),a(s,r,n),a(s,T,n),a(s,i,n),i.innerHTML=H,a(s,b,n),a(s,f,n),a(s,x,n),a(s,u,n),u.innerHTML=L},p:M,i:M,o:M,d(s){s&&t(o),s&&t(m),s&&t(c),s&&t(y),s&&t(k),s&&t(d),s&&t(l),s&&t(w),s&&t(r),s&&t(T),s&&t(i),s&&t(b),s&&t(f),s&&t(x),s&&t(u)}}}const P={title:"GetTooltip",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:D,published:A,author:q,summary:z,layout:B}=P;class E extends _{constructor(o){super();j(this,o,null,I,v,{})}}export{E as default,P as metadata};
