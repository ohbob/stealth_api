import{S as I,i as b,s as v,e as a,f as u,g as x,h as t,n as k,p as l}from"./vendor.47d6f2b6.js";function G(w){let n,m,i,c,r,d,p,A='<code class="language-pascal"><span class="token keyword">procedure</span> AddGumpIgnoreBySerial<span class="token punctuation">(</span>Serial <span class="token punctuation">:</span> Cardinal<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',y,f,S,o,C='<code class="language-python">AddGumpIgnoreBySerial<span class="token punctuation">(</span>Serial<span class="token punctuation">)</span></code>';return{c(){n=a("h1"),n.textContent=`${B}`,m=u(),i=a("p"),i.textContent="Add \u201CSerial\u201D to GumpIgnore list, so gumps with this Serial will be ignored when coming from server.",c=u(),r=a("p"),r.textContent="Pascal",d=u(),p=a("pre"),y=u(),f=a("p"),f.textContent="Python",S=u(),o=a("pre"),x(p,"class","language-pascal"),x(o,"class","language-python")},m(e,s){t(e,n,s),t(e,m,s),t(e,i,s),t(e,c,s),t(e,r,s),t(e,d,s),t(e,p,s),p.innerHTML=A,t(e,y,s),t(e,f,s),t(e,S,s),t(e,o,s),o.innerHTML=C},p:k,i:k,o:k,d(e){e&&l(n),e&&l(m),e&&l(i),e&&l(c),e&&l(r),e&&l(d),e&&l(p),e&&l(y),e&&l(f),e&&l(S),e&&l(o)}}}const _={title:"AddGumpIgnoreBySerial",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:B,published:T,author:H,summary:L,layout:M}=_;class j extends I{constructor(n){super();b(this,n,null,G,v,{})}}export{j as default,_ as metadata};
