import{S as D,i as F,s as P,e,f as p,g as G,h as a,n as H,p as t}from"./vendor.47d6f2b6.js";function R(M){let o,L,c,m,r,w,k,x,f,b,l,_='<code class="language-pascal"><span class="token keyword">function</span> GetIgnoreList<span class="token punctuation">(</span><span class="token keyword">var</span> UserList <span class="token punctuation">:</span> TStringList<span class="token punctuation">)</span> <span class="token punctuation">:</span> Boolean<span class="token punctuation">;</span></code>',T,y,v,d,C,i,A=`<code class="language-pascal"><span class="token comment">//that is used for demonstration purpose only, you can use IgnoreOff without this check.</span>
<span class="token keyword">procedure</span> RemoveFromIgnoreList<span class="token punctuation">(</span>ID <span class="token punctuation">:</span> Cardinal<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> List<span class="token punctuation">:</span> TStringList<span class="token punctuation">;</span> i<span class="token punctuation">:</span> Integer<span class="token punctuation">;</span>
<span class="token keyword">begin</span>
  List <span class="token operator">:=</span> TStringList<span class="token punctuation">.</span>Create<span class="token punctuation">;</span>
  <span class="token keyword">if</span> GetIgnoreList<span class="token punctuation">(</span>List<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">False</span> <span class="token keyword">then</span> <span class="token keyword">Exit</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> List<span class="token punctuation">.</span>IndexOf<span class="token punctuation">(</span>IntToHex<span class="token punctuation">(</span>ID<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">then</span>
    IgnoreOff<span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span><span class="token punctuation">;</span>
  List<span class="token punctuation">.</span>Free<span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`,S,I,g,u,O='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetIgnoreList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">dict</span> of string</code>';return{c(){o=e("h1"),o.textContent=`${N}`,L=p(),c=e("p"),c.textContent="Fill UserList by ids from IgnoreList in string format. If IgnoreList is empty, returns false and empty list, else true.",m=p(),r=e("p"),r.innerHTML='IgnoreList filled up by <a href="Api/Ignore">Ignore</a> and <a href="Api/IgnoreOff">IgnoreOff</a>, cleaned by <a href="Api/IgnoreReset">IgnoreReset</a>',w=p(),k=e("p"),k.textContent="WARNING! IDs in list in hex!",x=p(),f=e("p"),f.innerHTML="<strong>Pascal Syntax:</strong>",b=p(),l=e("pre"),T=p(),y=e("p"),y.textContent="Warning: var with type TStringList should be created before calling GetIgnoreList and be disposed after!",v=p(),d=e("p"),d.textContent="Pascal Example 1:",C=p(),i=e("pre"),S=p(),I=e("p"),I.innerHTML="<strong>Python Syntax:</strong>",g=p(),u=e("pre"),G(l,"class","language-pascal"),G(i,"class","language-pascal"),G(u,"class","language-python")},m(s,n){a(s,o,n),a(s,L,n),a(s,c,n),a(s,m,n),a(s,r,n),a(s,w,n),a(s,k,n),a(s,x,n),a(s,f,n),a(s,b,n),a(s,l,n),l.innerHTML=_,a(s,T,n),a(s,y,n),a(s,v,n),a(s,d,n),a(s,C,n),a(s,i,n),i.innerHTML=A,a(s,S,n),a(s,I,n),a(s,g,n),a(s,u,n),u.innerHTML=O},p:H,i:H,o:H,d(s){s&&t(o),s&&t(L),s&&t(c),s&&t(m),s&&t(r),s&&t(w),s&&t(k),s&&t(x),s&&t(f),s&&t(b),s&&t(l),s&&t(T),s&&t(y),s&&t(v),s&&t(d),s&&t(C),s&&t(i),s&&t(S),s&&t(I),s&&t(g),s&&t(u)}}}const E={title:"GetIgnoreList",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:N,published:W,author:j,summary:q,layout:z}=E;class B extends D{constructor(o){super();F(this,o,null,R,P,{})}}export{B as default,E as metadata};
