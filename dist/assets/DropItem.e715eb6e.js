import{S as G,i as S,s as W,e as p,f as e,g as _,h as a,n as H,p as t}from"./vendor.47d6f2b6.js";function Z(P){let o,b,i,w,k,I,r,x,f,D,m,C,l,E=`<code class="language-pascal"><span class="token keyword">function</span> DropItem<span class="token punctuation">(</span>MoveIntoID<span class="token punctuation">:</span>Cardinal<span class="token punctuation">;</span> X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">:</span>Integer<span class="token punctuation">)</span><span class="token punctuation">:</span>Boolean
</code>`,M,d,T,u,A='<code class="language-python"><span class="token keyword">def</span> <span class="token function">DragItem</span><span class="token punctuation">(</span>ItemID<span class="token punctuation">,</span> Amount<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span></code>',v,y,L,c,F=`<code class="language-pascal"><span class="token keyword">procedure</span> LootGold<span class="token punctuation">;</span>
<span class="token keyword">begin</span>
  <span class="token keyword">if</span> FindType<span class="token punctuation">(</span><span class="token number">$0EED</span><span class="token punctuation">,</span> Corpse<span class="token punctuation">)</span> <span class="token operator">&lt;></span> <span class="token number">0</span> <span class="token keyword">then</span>
  <span class="token keyword">begin</span>
    DragItem<span class="token punctuation">(</span>finditem<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Wait<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    DropItem<span class="token punctuation">(</span>backpack<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Wait<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`;return{c(){o=p("h1"),o.textContent=`${j}`,b=e(),i=p("p"),i.textContent="Method drop item from \u201Cfinger\u201D to selected container (or ground)",w=e(),k=p("p"),k.textContent="Returns True on success, False if no item \u201Con finger\u201D",I=e(),r=p("p"),r.innerHTML="case <strong><em>MoveIntoID</em></strong>:",x=e(),f=p("ul"),f.innerHTML=`<li>Ground, then drop item on the ground with the specified coordinates.</li> 
<li>container, then drop item to container.</li> 
<li>Item - will try to stack item with old.</li>`,D=e(),m=p("p"),m.textContent="Pascal",C=e(),l=p("pre"),M=e(),d=p("p"),d.textContent="Python",T=e(),u=p("pre"),v=e(),y=p("p"),y.textContent="Example Pascal",L=e(),c=p("pre"),_(l,"class","language-pascal"),_(u,"class","language-python"),_(c,"class","language-pascal")},m(n,s){a(n,o,s),a(n,b,s),a(n,i,s),a(n,w,s),a(n,k,s),a(n,I,s),a(n,r,s),a(n,x,s),a(n,f,s),a(n,D,s),a(n,m,s),a(n,C,s),a(n,l,s),l.innerHTML=E,a(n,M,s),a(n,d,s),a(n,T,s),a(n,u,s),u.innerHTML=A,a(n,v,s),a(n,y,s),a(n,L,s),a(n,c,s),c.innerHTML=F},p:H,i:H,o:H,d(n){n&&t(o),n&&t(b),n&&t(i),n&&t(w),n&&t(k),n&&t(I),n&&t(r),n&&t(x),n&&t(f),n&&t(D),n&&t(m),n&&t(C),n&&t(l),n&&t(M),n&&t(d),n&&t(T),n&&t(u),n&&t(v),n&&t(y),n&&t(L),n&&t(c)}}}const $={title:"DropItem",published:"2020-06-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:j,published:z,author:B,summary:R,layout:V}=$;class X extends G{constructor(o){super();S(this,o,null,Z,W,{})}}export{X as default,$ as metadata};
