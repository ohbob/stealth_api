import{S as R,i as j,s as v,e as t,f as o,g as G,h as a,n as M,p}from"./vendor.47d6f2b6.js";function H(C){let e,y,k,m,i,d,l,I='<code class="language-pascal"><span class="token keyword">function</span> GetY<span class="token punctuation">(</span>ObjID <span class="token punctuation">:</span> Cardinal<span class="token punctuation">)</span> <span class="token punctuation">:</span> Integer<span class="token punctuation">;</span></code>',w,r,T,c,Y=`<code class="language-pascal"><span class="token keyword">procedure</span> Recall<span class="token punctuation">(</span>Rune<span class="token punctuation">:</span> Cardinal<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> 
  x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> Integer<span class="token punctuation">;</span>
  MyTimer<span class="token punctuation">:</span> TDateTime<span class="token punctuation">;</span>
<span class="token keyword">begin</span>
  AddToSystemJournal<span class="token punctuation">(</span><span class="token string">'Recall: '</span> <span class="token operator">+</span> IntToStr<span class="token punctuation">(</span>Rune<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
  x <span class="token operator">:=</span> GetX<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  y <span class="token operator">:=</span> GetY<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">repeat</span>
    CheckMana<span class="token punctuation">;</span>
    MyTimer <span class="token operator">:=</span> Now<span class="token punctuation">;</span>
    WaitTargetObject<span class="token punctuation">(</span>Rune<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Cast<span class="token punctuation">(</span><span class="token string">'Recall'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">repeat</span>
      Wait<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">until</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;></span> GetX<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;></span> GetY<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token punctuation">(</span>InJournalBetweenTimes<span class="token punctuation">(</span><span class="token string">'fizzles'</span><span class="token punctuation">,</span> MyTimer<span class="token punctuation">,</span> Now<span class="token punctuation">)</span> <span class="token operator">&lt;></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">until</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;></span> GetX<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;></span> GetY<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  CheckLag<span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`,b,f,x,u,L='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetY</span><span class="token punctuation">(</span>ObjID<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span></code>';return{c(){e=t("h1"),e.textContent=`${_}`,y=o(),k=t("p"),k.innerHTML="Returns <em>Y</em> position for object <em>ObjID</em>",m=o(),i=t("p"),i.innerHTML="<strong>Pascal Syntax:</strong>",d=o(),l=t("pre"),w=o(),r=t("p"),r.textContent="Pascal Example:",T=o(),c=t("pre"),b=o(),f=t("p"),f.innerHTML="<strong>Python Syntax:</strong>",x=o(),u=t("pre"),G(l,"class","language-pascal"),G(c,"class","language-pascal"),G(u,"class","language-python")},m(n,s){a(n,e,s),a(n,y,s),a(n,k,s),a(n,m,s),a(n,i,s),a(n,d,s),a(n,l,s),l.innerHTML=I,a(n,w,s),a(n,r,s),a(n,T,s),a(n,c,s),c.innerHTML=Y,a(n,b,s),a(n,f,s),a(n,x,s),a(n,u,s),u.innerHTML=L},p:M,i:M,o:M,d(n){n&&p(e),n&&p(y),n&&p(k),n&&p(m),n&&p(i),n&&p(d),n&&p(l),n&&p(w),n&&p(r),n&&p(T),n&&p(c),n&&p(b),n&&p(f),n&&p(x),n&&p(u)}}}const S={title:"GetY",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:_,published:O,author:P,summary:z,layout:X}=S;class A extends R{constructor(e){super();j(this,e,null,H,v,{})}}export{A as default,S as metadata};
