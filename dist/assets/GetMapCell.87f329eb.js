import{S as L,i as S,s as W,e as t,f as o,g as C,h as a,n as x,p}from"./vendor.47d6f2b6.js";function X(G){let e,f,k,y,i,w,l,Z=`<code class="language-pascal"><span class="token keyword">function</span> GetMapCell<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y <span class="token punctuation">:</span> Word<span class="token punctuation">;</span> WorldNum <span class="token punctuation">:</span> Byte<span class="token punctuation">)</span> <span class="token punctuation">:</span> TMapCell<span class="token punctuation">;</span>

TMapCell <span class="token operator">=</span> <span class="token keyword">record</span>
  Tile <span class="token punctuation">:</span> Word<span class="token punctuation">;</span>
  Z <span class="token punctuation">:</span> ShortInt<span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`,m,r,M,c,_=`<code class="language-pascal">   <span class="token keyword">for</span> ix <span class="token operator">:=</span> <span class="token punctuation">(</span>GetX<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">to</span> <span class="token punctuation">(</span>GetX<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">do</span>
      <span class="token keyword">for</span> iy <span class="token operator">:=</span> <span class="token punctuation">(</span>GetY<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">to</span> <span class="token punctuation">(</span>GetY<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">do</span>
      <span class="token keyword">begin</span>
        T <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        X <span class="token operator">:=</span> ix<span class="token punctuation">;</span>
        Y <span class="token operator">:=</span> iy<span class="token punctuation">;</span>
        Z <span class="token operator">:=</span> GetZ<span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        MapCell <span class="token operator">:=</span> GetMapCell<span class="token punctuation">(</span>ix<span class="token punctuation">,</span> iy<span class="token punctuation">,</span> WorldNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>MapCell<span class="token punctuation">.</span>Tile <span class="token operator">=</span> Mountain_Tile<span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token punctuation">(</span>abs<span class="token punctuation">(</span>Z <span class="token operator">-</span> MapCell<span class="token punctuation">.</span>Z<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token keyword">then</span>
        <span class="token keyword">begin</span>
          T <span class="token operator">:=</span> MapCell<span class="token punctuation">.</span>Tile<span class="token punctuation">;</span>
          Z <span class="token operator">:=</span> MapCell<span class="token punctuation">.</span>Z<span class="token punctuation">;</span>
          WaitTargetTile<span class="token punctuation">(</span>T<span class="token punctuation">,</span> X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">)</span><span class="token punctuation">;</span>
          UseObject<span class="token punctuation">(</span>ShovelID<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span><span class="token punctuation">;</span>
      <span class="token keyword">end</span><span class="token punctuation">;</span>
</code>`,T,d,b,u,v='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GetCell</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> WorldNum<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">dict</span></code>';return{c(){e=t("h1"),e.textContent=`${H}`,f=o(),k=t("p"),k.textContent="Information about Map (Land) cell, including its tile and Z.",y=o(),i=t("p"),i.innerHTML="<strong>Pascal Syntax:</strong>",w=o(),l=t("pre"),m=o(),r=t("p"),r.textContent="Pascal Example:",M=o(),c=t("pre"),T=o(),d=t("p"),d.innerHTML="<strong>Python Syntax:</strong>",b=o(),u=t("pre"),C(l,"class","language-pascal"),C(c,"class","language-pascal"),C(u,"class","language-python")},m(n,s){a(n,e,s),a(n,f,s),a(n,k,s),a(n,y,s),a(n,i,s),a(n,w,s),a(n,l,s),l.innerHTML=Z,a(n,m,s),a(n,r,s),a(n,M,s),a(n,c,s),c.innerHTML=_,a(n,T,s),a(n,d,s),a(n,b,s),a(n,u,s),u.innerHTML=v},p:x,i:x,o:x,d(n){n&&p(e),n&&p(f),n&&p(k),n&&p(y),n&&p(i),n&&p(w),n&&p(l),n&&p(m),n&&p(r),n&&p(M),n&&p(c),n&&p(T),n&&p(d),n&&p(b),n&&p(u)}}}const Y={title:"GetMapCell",published:"2020-02-21T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:H,published:P,author:N,summary:j,layout:q}=Y;class z extends L{constructor(e){super();S(this,e,null,X,W,{})}}export{z as default,Y as metadata};
