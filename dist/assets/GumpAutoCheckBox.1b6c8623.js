import{S as I,i as L,s as N,e,f as p,g as G,h as a,n as w,p as t}from"./vendor.47d6f2b6.js";function H(T){let o,x,i,d,k,y,m,b,u,A='<code class="language-pascal"><span class="token keyword">procedure</span> GumpAutoCheckBox<span class="token punctuation">(</span>CheckBoxID <span class="token punctuation">:</span> Integer<span class="token punctuation">;</span> Value <span class="token punctuation">:</span> Integer<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',B,r,C,l,_=`<code class="language-pascal"><span class="token keyword">begin</span>
    WaitTargetGround<span class="token punctuation">(</span><span class="token number">$1BF5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    GumpAutoCheckBox<span class="token punctuation">(</span><span class="token number">1537</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//set hook for gump ckeckbox with return_value 1537, to set its status to 1(checked)</span>
    WaitGump<span class="token punctuation">(</span><span class="token string">'7956'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//set hook for gump button with return_value 7956. If found - send gump reply.</span>
    UseObject<span class="token punctuation">(</span>FindType<span class="token punctuation">(</span><span class="token number">$1EB9</span><span class="token punctuation">,</span>backpack<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//use hammer for receiving gump.</span>
<span class="token keyword">end</span><span class="token punctuation">;</span></code>`,g,f,v,c,h='<code class="language-python"><span class="token keyword">def</span> <span class="token function">GumpAutoCheckBox</span><span class="token punctuation">(</span>CBID<span class="token punctuation">,</span> Value<span class="token punctuation">)</span></code>';return{c(){o=e("h1"),o.textContent=`${P}`,x=p(),i=e("p"),i.innerHTML="Set hook for ONE incoming gump and check ALL existing gumps in stealth gump list for containing checkbox with <strong>\u201Creturn_value\u201D</strong>  <em>CheckBoxID</em>, if found - changing its <strong>\u201Cstatus\u201D</strong> to <em>Value</em>. Normally,  <strong>\u201Cstatus\u201D</strong> 0 mean unchecked, any other - checked.",d=p(),k=e("p"),k.innerHTML='NB: This method does NOT send a gump reply to server, it\u2019s just changing checkboxes status values. For reply to gump use <a href="Api/WaitGump">WaitGump</a> or <a href="Api/NumGumpButton">NumGumpButton</a>',y=p(),m=e("p"),m.textContent="Pascal",b=p(),u=e("pre"),B=p(),r=e("p"),r.textContent="Pascal Example:",C=p(),l=e("pre"),g=p(),f=e("p"),f.textContent="Python",v=p(),c=e("pre"),G(u,"class","language-pascal"),G(l,"class","language-pascal"),G(c,"class","language-python")},m(s,n){a(s,o,n),a(s,x,n),a(s,i,n),a(s,d,n),a(s,k,n),a(s,y,n),a(s,m,n),a(s,b,n),a(s,u,n),u.innerHTML=A,a(s,B,n),a(s,r,n),a(s,C,n),a(s,l,n),l.innerHTML=_,a(s,g,n),a(s,f,n),a(s,v,n),a(s,c,n),c.innerHTML=h},p:w,i:w,o:w,d(s){s&&t(o),s&&t(x),s&&t(i),s&&t(d),s&&t(k),s&&t(y),s&&t(m),s&&t(b),s&&t(u),s&&t(B),s&&t(r),s&&t(C),s&&t(l),s&&t(g),s&&t(f),s&&t(v),s&&t(c)}}}const M={title:"GumpAutoCheckBox",published:"2021-10-05T21:36:59.459Z",author:"Vizit0r",summary:"API",layout:"blog"},{title:P,published:W,author:j,summary:D,layout:E}=M;class F extends I{constructor(o){super();L(this,o,null,H,N,{})}}export{F as default,M as metadata};
